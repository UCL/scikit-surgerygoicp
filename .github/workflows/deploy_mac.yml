name: Mac Deploy

on:
  push:
    tags:
    - v*
env:
  DO_PYTHON_BUILD: true
  PS4: '+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
  REPO_DIR: .
  BUILD_COMMIT: HEAD
  BUILD_DEPENDS: numpy wheel six
  TEST_DEPENDS: numpy pytest
  BDIST_PARAMS: ""
  UNICODE_WIDTH: 32
  PLAT: x86_64


jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        python-ver: [3.6, 3.7, 3.8]

    runs-on: macos-latest
      
    env:
      MB_PYTHON_VERSION: ${{ matrix.python-ver }}
      
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python-ver }}
      - name: Run multibuild
        run: |
          pip install virtualenv

          WHEEL_SDIR=${WHEEL_SDIR:-wheelhouse}
          MULTIBUILD_DIR=$(dirname "${BASH_SOURCE[0]}")
          if [ ! -d "$PWD/$WHEEL_SDIR" ]; then mkdir $PWD/$WHEEL_SDIR; fi
          
          source multibuild/common_utils.sh
          source multibuild/travis_osx_steps.sh
          before_install

          build_wheel $REPO_DIR $PLAT

          install_run $PLAT

      - name: deploy
        run: |
          pip install twine
          pip install --upgrade pyOpenSSL
          twine upload --repository pypi -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} --skip-existing wheelhouse/*
